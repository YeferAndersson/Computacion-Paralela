porDepartamento("TACNA")
#por region
rm(sismo_puno)
rm(depa_puno)
rm(as.list(c(a_test,b_test,c_test,d_test)))
rm(as.list(c("a_test","b_test","c_test","d_test")))
rm(c("a_test","b_test","c_test","d_test"))
rm(list = c("a_test","b_test","c_test","d_test"))
rm(abctest)
rm(DEPARTAMENTO)
coordenadas_dep
us
x
y
str(datos3)
year_test
year_test = c(1961,2000)
datos3 %>% filter(year(FECHA_UTC) == year_test)
porDepartamento <- function(departamento, yearsSelect){
depa = coordenadas_dep[coordenadas_dep == departamento,]
ggplot(data = peru_d %>%
filter(NOMBDEP == departamento)) +
geom_sf() +
geom_point(data = datos3 %>%
filter(LONGITUD > depa$minx,
LONGITUD < depa$maxx,
LATITUD > depa$miny,
LATITUD < depa$maxy,
year(FECHA_UTC) == yearsSelect),
aes(x = LONGITUD,
y = LATITUD,
color = MAGNITUD,
alpha = MAGNITUD,
size = MAGNITUD))+
scale_radius(range = c(0.2,3))+
scale_color_viridis() +
labs(title=paste("Magnitud de los sismos en la Region de ", departamento),
subtitle="Desde el 1960",
caption="Datos de IGP2022")
}
porDepartamento("PUNO", year_test)
datos3 %>%
filter(LONGITUD > depa$minx,
LONGITUD < depa$maxx,
LATITUD > depa$miny,
LATITUD < depa$maxy,
year(FECHA_UTC) == yearsSelect)
datos3 %>%
filter(LONGITUD > depa$minx,
LONGITUD < depa$maxx,
LATITUD > depa$miny,
LATITUD < depa$maxy
)
porDepartamento("PUNO", 1960)
porDepartamento("PUNO", 2021)
year_test = 1960:2021
porDepartamento("PUNO",year_test )
porDepartamento("PUNO",year_test)
year_test = c(1960,2000:2020)
porDepartamento("PUNO",year_test)
year_test = c(1960,2000:2010)
porDepartamento("PUNO",year_test)
year_test = c(2019,2020,2021)
porDepartamento("PUNO",year_test)
year_test = c(2019,2020)
porDepartamento("PUNO",year_test)
datos3 %>% filter(year(FECHA_UTC) == year_test)
year_test = c(2019,2020,2021)
datos3 %>% filter(year(FECHA_UTC) == year_test)
datos3 %>% filter(year(FECHA_UTC) == year_test) %>% tail()
datos3 %>% filter(year(FECHA_UTC) == year_test) %>% head()
year_test = 1960:2021
datos3 %>% filter(year(FECHA_UTC) == year_test) %>% head()
datos3 %>% filter(year(FECHA_UTC) == year_test) %>% tail()
year_test[4]
year_test[1]
year_test[16]
datos3 %>% filter(year(FECHA_UTC) == year_test) %>% tail()
datos3 %>% filter_(year(FECHA_UTC) == year_test) %>% tail()
datos3 %>% filter_all(year(FECHA_UTC) == year_test) %>% tail()
datos3 %>% filter(year(FECHA_UTC) %in% year_test) %>% tail()
datos3 %>% filter(year(FECHA_UTC) %in% year_test) %>% head()
porDepartamento <- function(departamento, yearsSelect){
depa = coordenadas_dep[coordenadas_dep == departamento,]
ggplot(data = peru_d %>%
filter(NOMBDEP == departamento)) +
geom_sf() +
geom_point(data = datos3 %>%
filter(LONGITUD > depa$minx,
LONGITUD < depa$maxx,
LATITUD > depa$miny,
LATITUD < depa$maxy,
year(FECHA_UTC) %in% yearsSelect),
aes(x = LONGITUD,
y = LATITUD,
color = MAGNITUD,
alpha = MAGNITUD,
size = MAGNITUD))+
scale_radius(range = c(0.2,3))+
scale_color_viridis() +
labs(title=paste("Magnitud de los sismos en la Region de ", departamento),
subtitle="Desde el 1960",
caption="Datos de IGP2022")
}
porDepartamento("PUNO",year_test)
porDepartamento("PUNO",year_test)
year_test = c(1960,2000,2021)
porDepartamento("PUNO",year_test)
porDepartamento <- function(departamento, yearsSelect){
depa = coordenadas_dep[coordenadas_dep == departamento,]
ggplot(data = peru_d %>%
filter(NOMBDEP == departamento)) +
geom_sf() +
geom_point(data = datos3 %>%
filter(LONGITUD > depa$minx,
LONGITUD < depa$maxx,
LATITUD > depa$miny,
LATITUD < depa$maxy,
year(FECHA_UTC) %in% yearsSelect),
aes(x = LONGITUD,
y = LATITUD,
color = MAGNITUD,
alpha = MAGNITUD,
size = MAGNITUD))+
scale_radius(range = c(0.2,3))+
scale_color_viridis() +
labs(title=paste("Magnitud de los sismos en ", departamento),
subtitle=paste("años: ", yearsSelect),
caption="Datos de IGP2022")
}
porDepartamento("PUNO",year_test)
as.character(year_test)
porDepartamento <- function(departamento, yearsSelect){
depa = coordenadas_dep[coordenadas_dep == departamento,]
ggplot(data = peru_d %>%
filter(NOMBDEP == departamento)) +
geom_sf() +
geom_point(data = datos3 %>%
filter(LONGITUD > depa$minx,
LONGITUD < depa$maxx,
LATITUD > depa$miny,
LATITUD < depa$maxy,
year(FECHA_UTC) %in% yearsSelect),
aes(x = LONGITUD,
y = LATITUD,
color = MAGNITUD,
alpha = MAGNITUD,
size = MAGNITUD))+
scale_radius(range = c(0.2,3))+
scale_color_viridis() +
labs(title=paste("Magnitud de los sismos en ", departamento),
subtitle=paste("años: ", as.character(yearsSelect)),
caption="Datos de IGP2022")
}
porDepartamento("PUNO",year_test)
porDepartamento <- function(departamento, yearsSelect){
depa = coordenadas_dep[coordenadas_dep == departamento,]
ggplot(data = peru_d %>%
filter(NOMBDEP == departamento)) +
geom_sf() +
geom_point(data = datos3 %>%
filter(LONGITUD > depa$minx,
LONGITUD < depa$maxx,
LATITUD > depa$miny,
LATITUD < depa$maxy,
year(FECHA_UTC) %in% yearsSelect),
aes(x = LONGITUD,
y = LATITUD,
color = MAGNITUD,
alpha = MAGNITUD,
size = MAGNITUD))+
scale_radius(range = c(0.2,3))+
scale_color_viridis() +
labs(title=paste("Magnitud de los sismos en ", departamento),
subtitle=paste("años: ", as.character(yearsSelect), sep = " - "),
caption="Datos de IGP2022")
}
porDepartamento("PUNO",year_test)
year_test
paste(year_test)
paste("hola", year_test)
paste("hola", as.character(year_test))
porDepartamento <- function(departamento, yearsSelect){
depa = coordenadas_dep[coordenadas_dep == departamento,]
ggplot(data = peru_d %>%
filter(NOMBDEP == departamento)) +
geom_sf() +
geom_point(data = datos3 %>%
filter(LONGITUD > depa$minx,
LONGITUD < depa$maxx,
LATITUD > depa$miny,
LATITUD < depa$maxy,
year(FECHA_UTC) %in% yearsSelect),
aes(x = LONGITUD,
y = LATITUD,
color = MAGNITUD,
alpha = MAGNITUD,
size = MAGNITUD))+
scale_radius(range = c(0.2,3))+
scale_color_viridis() +
labs(title=paste("Magnitud de los sismos en ", departamento),
subtitle=yearsSelect,
caption="Datos de IGP2022")
}
porDepartamento("PUNO",year_test)
year_test = c(1990,2000,2021)
porDepartamento("PUNO",year_test)
porDepartamento <- function(departamento, yearsSelect){
depa = coordenadas_dep[coordenadas_dep == departamento,]
ggplot(data = peru_d %>%
filter(NOMBDEP == departamento)) +
geom_sf() +
geom_point(data = datos3 %>%
filter(LONGITUD > depa$minx,
LONGITUD < depa$maxx,
LATITUD > depa$miny,
LATITUD < depa$maxy,
year(FECHA_UTC) %in% yearsSelect),
aes(x = LONGITUD,
y = LATITUD,
color = MAGNITUD,
alpha = MAGNITUD,
size = MAGNITUD))+
scale_radius(range = c(0.2,3))+
scale_color_viridis() +
labs(title=paste("Magnitud de los sismos en ", departamento),
subtitle=as.character(yearsSelect),
caption="Datos de IGP2022")
}
porDepartamento("PUNO",year_test)
cat(year_test)
porDepartamento <- function(departamento, yearsSelect){
depa = coordenadas_dep[coordenadas_dep == departamento,]
ggplot(data = peru_d %>%
filter(NOMBDEP == departamento)) +
geom_sf() +
geom_point(data = datos3 %>%
filter(LONGITUD > depa$minx,
LONGITUD < depa$maxx,
LATITUD > depa$miny,
LATITUD < depa$maxy,
year(FECHA_UTC) %in% yearsSelect),
aes(x = LONGITUD,
y = LATITUD,
color = MAGNITUD,
alpha = MAGNITUD,
size = MAGNITUD))+
scale_radius(range = c(0.2,3))+
scale_color_viridis() +
labs(title=paste("Magnitud de los sismos en ", departamento),
subtitle=cat(yearsSelect),
caption="Datos de IGP2022")
}
porDepartamento("PUNO",year_test)
cat(as.character(year_test))
as.character(cat(year_test))
as.character(paste(year_test))
as.character(paste0(year_test))
as.character(paste0(year_test))[1]
paste("hola", year_test[1])
paste("hola", year_test[1], paste(year_test[2]))
paste("hola", year_test[1], paste(year_test[2:3]))
porDepartamento <- function(departamento, yearsSelect){
depa = coordenadas_dep[coordenadas_dep == departamento,]
ggplot(data = peru_d %>%
filter(NOMBDEP == departamento)) +
geom_sf() +
geom_point(data = datos3 %>%
filter(LONGITUD > depa$minx,
LONGITUD < depa$maxx,
LATITUD > depa$miny,
LATITUD < depa$maxy,
year(FECHA_UTC) %in% yearsSelect),
aes(x = LONGITUD,
y = LATITUD,
color = MAGNITUD,
alpha = MAGNITUD,
size = MAGNITUD))+
scale_radius(range = c(0.2,3))+
scale_color_viridis() +
labs(title=paste("Magnitud de los sismos en ", departamento),
subtitle=paste(yearsSelect),
caption="Datos de IGP2022")
}
porDepartamento("PUNO",year_test)
for (i in 1:3) <- paste(year_test[i])
for (i in 1:3) <- paste(year_test[i])
for (i in 1:3) paste(year_test[i])
for (i in 1:3) paste(year_test[i])
for (i in 1:3) print(year_test[i])
for (i in 1:3) paste(year_test[i])
paste(year_test[1])
for (i in 1:3) paste(year_test[i])
toString(year_test)
porDepartamento <- function(departamento, yearsSelect){
depa = coordenadas_dep[coordenadas_dep == departamento,]
ggplot(data = peru_d %>%
filter(NOMBDEP == departamento)) +
geom_sf() +
geom_point(data = datos3 %>%
filter(LONGITUD > depa$minx,
LONGITUD < depa$maxx,
LATITUD > depa$miny,
LATITUD < depa$maxy,
year(FECHA_UTC) %in% yearsSelect),
aes(x = LONGITUD,
y = LATITUD,
color = MAGNITUD,
alpha = MAGNITUD,
size = MAGNITUD))+
scale_radius(range = c(0.2,3))+
scale_color_viridis() +
labs(title=paste("Magnitud de los sismos en ", departamento),
subtitle=paste("año(s): ", toString(yearsSelect)),
caption="Datos de IGP2022")
}
year_test = c(1990,2000,2021)
porDepartamento("PUNO",year_test)
year_test = 2000:2021
porDepartamento("PUNO",year_test)
toString(year_test)
toString(year_test, sep = " ")
toString(year_test, sep = " - ")
porDepartamento <- function(departamento, yearsSelect){
depa = coordenadas_dep[coordenadas_dep == departamento,]
ggplot(data = peru_d %>%
filter(NOMBDEP == departamento)) +
geom_sf() +
geom_point(data = datos3 %>%
filter(LONGITUD > depa$minx,
LONGITUD < depa$maxx,
LATITUD > depa$miny,
LATITUD < depa$maxy,
year(FECHA_UTC) %in% yearsSelect),
aes(x = LONGITUD,
y = LATITUD,
color = MAGNITUD,
alpha = MAGNITUD,
size = MAGNITUD))+
scale_radius(range = c(0.2,3))+
scale_color_viridis() +
labs(title=paste("Magnitud de los sismos en ", departamento),
subtitle=paste("año(s): ", yearsSelect, collapse = " "),
caption="Datos de IGP2022")
}
year_test = c(1992,2001,2010,2020)
porDepartamento("PUNO",year_test)
porDepartamento <- function(departamento, yearsSelect){
depa = coordenadas_dep[coordenadas_dep == departamento,]
ggplot(data = peru_d %>%
filter(NOMBDEP == departamento)) +
geom_sf() +
geom_point(data = datos3 %>%
filter(LONGITUD > depa$minx,
LONGITUD < depa$maxx,
LATITUD > depa$miny,
LATITUD < depa$maxy,
year(FECHA_UTC) %in% yearsSelect),
aes(x = LONGITUD,
y = LATITUD,
color = MAGNITUD,
alpha = MAGNITUD,
size = MAGNITUD))+
scale_radius(range = c(0.2,3))+
scale_color_viridis() +
labs(title=paste("Magnitud de los sismos en ", departamento),
subtitle=paste(yearsSelect, collapse = " "),
caption="Datos de IGP2022")
}
porDepartamento("PUNO",year_test)
porDepartamento <- function(departamento, yearsSelect){
depa = coordenadas_dep[coordenadas_dep == departamento,]
ggplot(data = peru_d %>%
filter(NOMBDEP == departamento)) +
geom_sf() +
geom_point(data = datos3 %>%
filter(LONGITUD > depa$minx,
LONGITUD < depa$maxx,
LATITUD > depa$miny,
LATITUD < depa$maxy,
year(FECHA_UTC) %in% yearsSelect),
aes(x = LONGITUD,
y = LATITUD,
color = MAGNITUD,
alpha = MAGNITUD,
size = MAGNITUD))+
scale_radius(range = c(0.2,3))+
scale_color_viridis() +
labs(title=paste("Magnitud de los sismos en ", departamento),
subtitle=paste(yearsSelect, collapse = " - "),
caption="Datos de IGP2022")
}
porDepartamento("PUNO",year_test)
shiny::runApp('ObservatorioSismico')
shiny::runApp('ObservatorioSismico')
setNames(names(datos3))
setNames(names(datos3), "MAGNITUD")
setDIFF(names(datos3))
setdiff(names(datos3))
setdiff(names(datos3), "MAGNITUD")
names(coordenadas_dep)
names(coordenadas_dep$dep)
factor(coordenadas_dep$dep)
factor(coordenadas_dep$dep)
factor(coordenadas_dep$dep)[1]
factor(coordenadas_dep$dep)[2]
coordenadas_dep$dep
dirmapas
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
peru_d$NOMBDEP
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
peru_d$NOMBDEP[1]
peru_d$NOMBDEP[15]
peru_d$NOMBDEP[19]
peru_d$NOMBDEP[21]
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
porDepartamento("PUNO",NULL)
runApp('ObservatorioSismico')
library(sp)
library(rmarkdown)
library(dplyr)
library(lubridate)
library(ggmap)
library(ggplot2)
library(viridis)
library(rcartocolor)
library(plotly)
library(sf)
porDepartamento("PUNO",NULL)
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
library(sp)
library(rmarkdown)
library(dplyr)
library(lubridate)
library(ggmap)
library(ggplot2)
library(viridis)
library(rcartocolor)
library(plotly)
library(sf)
library(sf)
library(purrr)
library(tidyverse)
library(ggplot2)
library(ggrepel)
shiny::runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
porDepartamento("PUNO",year_test)
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
install.packages("shinythemes")
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
runApp('ObservatorioSismico')
